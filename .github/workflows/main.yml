name: Build and Push to ECR

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: fotoshop-app
  ECS_CLUSTER: springboot-cluster         # Your ECS cluster
  ECS_SERVICE: springboot-service         # Your ECS service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update ECS Task Definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: render-task-definition
        with:
          task-definition: task-definition.json
          container-name: springboot-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Register ECS Task Definition
        uses: aws-actions/amazon-ecs-register-task-definition@v1
        id: register-task-definition
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          wait-for-completion: true

      - name: Trigger AWS CodePipeline
        run: |
          aws codepipeline start-pipeline-execution --name springboot-app-pipeline